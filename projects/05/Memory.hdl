// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O.
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory
 * location specified by address. If load==1, the in value is loaded
 * into the memory location specified by address. This value becomes
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used.
 * Access to address>0x6000 is invalid. Access to any address in
 * the range 0x4000-0x5FFF results in accessing the screen memory
 * map. Access to address 0x6000 results in accessing the keyboard
 * memory map. The behavior in these addresses is described in the
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    // Put your code here:
    // Address bit 14 decides if we're accessing RAM or screen/keyboard
    DMux4Way(in=load, sel=address[13..14], a=ramA, b=ramB, c=screenInput, d=null);

    // This is needed as we can't route 2 DMux outputs to the same value
    Or(a=ramA, b=ramB, out=ramInput);

    // Map the RAM value for the given input (we ignore MSB as the DMux handles the selection logic)
    RAM16K(in=in, load=ramInput, address=address[0..13], out=ram);

    // Map the Screen value for the given input (ignore 2 MSBs which are already used for selection logic)
    Screen(in=in, load=screenInput, address=address[0..12], out=screen);
    // Keyboard output doesn't depend on externals
    Keyboard(out=kbd);

    // Return the correct output based on the selection bits
    Mux4Way16(a=ram, b=ram, c=screen, d=kbd, sel=address[13..14], out=out);
}

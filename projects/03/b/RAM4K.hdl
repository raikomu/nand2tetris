// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address[9..11], a=selA, b=selB, c=selC, d=selD, e=selE, f=selF, g=selG, h=selH);

    RAM512(in=in, load=selA, address=address[0..8], out=ramA);
    RAM512(in=in, load=selB, address=address[0..8], out=ramB);
    RAM512(in=in, load=selC, address=address[0..8], out=ramC);
    RAM512(in=in, load=selD, address=address[0..8], out=ramD);
    RAM512(in=in, load=selE, address=address[0..8], out=ramE);
    RAM512(in=in, load=selF, address=address[0..8], out=ramF);
    RAM512(in=in, load=selG, address=address[0..8], out=ramG);
    RAM512(in=in, load=selH, address=address[0..8], out=ramH);

    Mux8Way16(a=ramA, b=ramB, c=ramC, d=ramD, e=ramE, f=ramF, g=ramG, h=ramH, sel=address[9..11], out=out);
}
